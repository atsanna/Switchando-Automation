<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>#HomeAutomation</title>
    <script src="resources/jQuery.js" type="text/javascript"></script>
    <script src="resources/vectorl.js" type="text/javascript"></script>
    <script src="resources/colorwheel.js" type="text/javascript"></script>
    <link rel="stylesheet" href="resources/foundation.min.css" />

    <style type="text/css" media="screen">
        body {
            background: #FFF;
            font: 14px/20px helvetica, arial;
            text-align: center;
            background-color: #262626;
        }
        button,
        .button,
        a.button,
        input.button {
            border-radius: 0;
        }
        a {
            color: #F60;
        }

        .demo {
            text-align: left;
            width: 600px;
            margin: 0 auto;
            padding: 20px;
            background: #FFFFEE;
            -moz-box-shadow: #a6a6a6 0px 0px 4px;
            box-shadow: #a6a6a6 0px 0px 4px;
            -webkit-box-shadow: #a6a6a6 0px 0px 4px;
        }

        input {
            font-family: monospace;
            font-size: 16px;
        }

        .swatch {
            padding: 10px;
        }

        .method {
            margin-bottom: 20px;
        }

        .code p {
            margin: 0;
            padding: 0;
            display: none;
        }

        .source {
            font-size: 10px;
            line-height: 14px;
        }

        .example, .code {
            margin: 10px 0;
            padding: 10px 0;
            border-top: 2px #CCC solid;
        }

        h2 {
            font-size: 16px;
        }

        h1 {
            color: #000;
        }

        .example h2, .example p {
            margin: 0 0 10px;
        }

        .example p {
            width: 300px;
        }

        .method b {
            color: #2e5478;
        }

        .method div {
            width: 400px;
        }

        code {
            display: none;
            background: #FFF;
            padding: 10px;
        }

        .returns {
            color: #237210;
        }

        .show_source {
            margin: 20px 0 0;
            color: #999;
            text-decoration: underline;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div id="show_off" style="display:none"></div><br /><br />
    <div id="input_example" class="text-center">
        <div class="small-12 columns">
            <div class="colorwheel_large" style="margin:auto"></div>
            <input style="display:none" name="input_example" id="inputclr" size="7"><br />
        </div>
        <button id="sendrequestbtn" class="button" style="width:100%" onclick="myFunction()">Set</button>
    </div>
    <script>
        document.getElementById("inputclr").value = rgbToHex(get('R'), get('G'), get('B'));
        
        function myFunction() {
    var x = document.getElementById("inputclr").value;
    //var w = document.getElementById("wcolor").value;
    var ip = get('ip');
    var xhttp = new XMLHttpRequest();
            var req = get('protocol') + '://' + get('ip') + "/api/?interface=auto&objname=" + get('id') + "&R=" + hexToRgb(x).r + "&G=" + hexToRgb(x).g + "&B=" + hexToRgb(x).b + "&dimmer=1000" + "&password=" + get('password');

    xhttp.open("GET", req, false);
    xhttp.send();
    //xhttp.open("GET", "http://" + ip + "/api/?interface=light_w&objname=w_led&W=" + w + "&dimmer=2", false);
    //xhttp.send();
    var element = document.getElementById("sendrequestbtn");
    element.style.background = x;
}
        function get(name){
   if(name=(new RegExp('[?&]'+encodeURIComponent(name)+'=([^&]*)')).exec(location.search))
      return decodeURIComponent(name[1]);
}
function hexToRgb(hex) {
    // Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")
    var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    hex = hex.replace(shorthandRegex, function(m, r, g, b) {
        return r + r + g + g + b + b;
    });
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}
        function rgbToHex(red, green, blue) {
            var rgb = blue | (green << 8) | (red << 16);
            return '#' + (0x1000000 + rgb).toString(16).slice(1)
        }

      function show_source(target){
        target.slideDown();
      }

      function set_source(f, target){
        f();
        target.text(f.toString())
      }

function size_example(){
  Raphael.colorwheel($("#size_example .colorwheel_small")[0],50).color("#F00");
  Raphael.colorwheel($("#size_example .colorwheel_medium")[0],150).color("#0F0");
  Raphael.colorwheel($("#size_example .colorwheel_large")[0],300, 180).color("#00F");
}

function input_example(){
  var cw = Raphael.colorwheel($("#input_example .colorwheel_large")[0],300,200);
  cw.input($("#input_example input")[0]);
}

function callback_example(){
  var cw = Raphael.colorwheel($("#callback_example .colorwheel")[0],150),
      onchange_el = $("#callback_example .onchange"),
      ondrag_el = $("#callback_example .ondrag");
      cw.color("#F00");

  function start(){ondrag_el.show()}
  function stop(){ondrag_el.hide()}

  cw.ondrag(start, stop);
  cw.onchange(function(color)
    {
      var colors = [parseInt(color.r), parseInt(color.g), parseInt(color.b)]
      onchange_el.css("background", color.hex).text("RGB:"+colors.join(", "))
    })

}

function cycle_example(){
  var position = 0,
      letters = [],
      colorwheel;


  function setup_the_letters(){
    var cycle = $(".cycle"),
        l = cycle.text().split("");

    cycle.html("");

    for (var i=0; i < l.length; i++) {
      var letter = $("<span>"+l[i]+"</span>");
      cycle.append(letter);
      letters.push(letter);
    };
  }

  function update(color){
    position++;
    if(position > letters.length-1){ position = 0; }
    letters[position].css("color", color.hex);
  }

  colorwheel = Raphael.colorwheel($("#cycle_example .colorwheel")[0],150);
  setup_the_letters();
  colorwheel.onchange(update).color("#864343");
}

      $(document).ready(function(){
        Raphael.colorwheel($("#show_off")[0],200).color("#FF6600").onchange(function(c){$(".title").css("color",c.hex)});
        set_source(input_example, $("#input_example .source"))
        set_source(size_example, $("#size_example .source"))
        set_source(callback_example, $("#callback_example .source"))
        set_source(cycle_example, $("#cycle_example .source"))
        $(".show_source").click(function(){
          $(this).parents().filter('.example').find("code").slideDown();
        });
      })
    </script>

    <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-605430-4']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
  })();

    </script>
</body>
</html>
